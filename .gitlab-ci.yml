image: golang:1.13-buster
variables:
  GO111MODULE: "on"

stages:
  - lint
  - test
  - build
  - docker

fmt:
  stage: lint
  tags:
    - shared
  script:
    - RESULT=$(mktemp -t orig-XXXXX -p ${XDG_RUNTIME_DIR:-"/tmp"})
    - gofmt -s -w -d ./.. > $RESULT
    - if [[ $(wc -l < $RESULT) -gt 1 ]]; then cat $RESULT; exit 1; fi

lint:
  stage: lint
  tags:
    - shared
  before_script:
    - export GOLANGCI_VERSION="1.27.0"
    - curl -sLO "https://github.com/golangci/golangci-lint/releases/download/v${GOLANGCI_VERSION}/golangci-lint-${GOLANGCI_VERSION}-linux-amd64.tar.gz"
    - tar xfz "golangci-lint-${GOLANGCI_VERSION}-linux-amd64.tar.gz"
    - mv "golangci-lint-${GOLANGCI_VERSION}-linux-amd64/golangci-lint" /usr/local/bin
    - rm -rf "golangci-lint-${GOLANGCI_VERSION}-linux-amd64" "golangci-lint-${GOLANGCI_VERSION}-linux-amd64.tar.gz"
    - unset GOLANGCI_VERSION
  script:
    - make lint

unit_test:
  stage: test
  tags:
    - shared
  before_script:
    - go get -u github.com/jstemmer/go-junit-report
    - go install github.com/jstemmer/go-junit-report
    - export PATH="$PATH:/build/go/bin"
  script:
     - go test ./... -coverprofile unit-test.out -race | go-junit-report > report.xml
  artifacts:
    reports:
      junit: report.xml
    paths:
    - "*.out"
    expire_in: 1 day

build:
  stage: build
  tags:
    - shared
  script: make build
  artifacts:
    paths:
      - mqtt-kafka-translator

docker:
  stage: docker
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  tags:
    - shared
  cache: {}
  script: |
    echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    cat /kaniko/.docker/config.json
    /kaniko/executor \
      --context $CI_PROJECT_DIR \
      --dockerfile $CI_PROJECT_DIR/Dockerfile \
      --destination $CI_REGISTRY/$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA \
      --cache=true # Remove to disable caching
